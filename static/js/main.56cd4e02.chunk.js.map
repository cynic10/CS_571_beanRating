{"version":3,"sources":["components/RankingTable/RankingTable.js","components/RadarChart/RadarChart.js","components/LineGraph/LineGraph.js","components/StackedBarChart/StackedBarChart.js","App.js","reportWebVitals.js","index.js"],"names":["RankingTable","data","setData","useState","sortColumn","setSortColumn","sortAsc","setSortAsc","useEffect","fetch","then","res","text","parsed","Papa","parse","header","length","React","createElement","className","columns","Object","keys","map","col","key","onClick","column","isAsc","sorted","sort","a","b","handleSort","style","cursor","row","idx","categories","RadarChart","selectedYear","setSelectedYear","visibleCountries","setVisibleCountries","shouldAnimate","setShouldAnimate","svgRef","useRef","d3","rows","d","_ref","country","trim","year","Aroma","Flavor","Aftertaste","Acidity","Body","Balance","Uniformity","Sweetness","Moisture","Total","years","Set","countries","filter","initVis","forEach","c","useMemo","countriesForYear","sortedCountries","colorScale","domain","range","filtered","radius","Math","min","angleSlice","PI","svgEl","current","selectAll","remove","svg","attr","append","rScale","i","cat","angle","x","cos","y","sin","radarLine","curve","_ref2","records","rec","coords","v","startCoords","path","datum","transition","duration","attrTween","interp","t","circles","enter","ref","htmlFor","id","value","onChange","e","target","_ref3","vis","[object Object]","toggle","backgroundColor","LineGraph","selectedCountry","setSelectedCountry","yAxisOption","setYAxisOption","avgProduction","avgScore","Array","from","filteredData","dataByYear","values","margin","xScale","yScale","viewBox","preserveAspectRatio","width","height","ticks","tick","fontSize","textAnchor","alignmentBaseline","toFixed","x1","x2","y1","y2","stroke","strokeWidth","fill","dy","transform","StackedBarChart","Year","Country","reduce","acc","top5Data","totalScore","sum","slice","nice","color","layers","stackGenerator","layer","j","y0","barWidth","App","src","alt","href","rel","marginTop","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.56cd4e02.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './RankingTable.css';\r\nimport Papa from 'papaparse';\r\n\r\nconst RankingTable = () => {\r\n  const [data, setData] = useState([]);\r\n  const [sortColumn, setSortColumn] = useState(null);\r\n  const [sortAsc, setSortAsc] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch('/datasets/rankingTable_radarChart_dataset.csv')\r\n      .then((res) => res.text())\r\n      .then((text) => {\r\n        const parsed = Papa.parse(text, { header: true });\r\n        setData(parsed.data);\r\n      });\r\n  }, []);\r\n\r\n  const handleSort = (column) => {\r\n    const isAsc = column === sortColumn ? !sortAsc : true;\r\n    const sorted = [...data].sort((a, b) => {\r\n      if (a[column] < b[column]) return isAsc ? -1 : 1;\r\n      if (a[column] > b[column]) return isAsc ? 1 : -1;\r\n      return 0;\r\n    });\r\n    setSortColumn(column);\r\n    setSortAsc(isAsc);\r\n    setData(sorted);\r\n  };\r\n\r\n  if (data.length === 0) return <div className=\"ranking-table\">Loading...</div>;\r\n\r\n  const columns = Object.keys(data[0]);\r\n\r\n  return (\r\n    <div className=\"ranking-table\">\r\n      <h2>Ranking Table</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"sticky-col\">#</th> {/* New sticky index header */}\r\n            {columns.map((col) => (\r\n              <th key={col} onClick={() => handleSort(col)} style={{ cursor: 'pointer' }}>\r\n                {col} {sortColumn === col ? (sortAsc ? '↑' : '↓') : ''}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            {data.map((row, idx) => (\r\n                <tr key={idx}>\r\n                    <td className=\"sticky-col\">{idx + 1}</td> {/* New sticky index cell */}\r\n                    {columns.map((col) => (\r\n                        <td key={col}>{row[col]}</td>\r\n                 ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RankingTable;\r\n","// RadarChart.js\r\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './RadarChart.css';\r\n\r\nconst categories = [\r\n  'Aroma',\r\n  'Flavor',\r\n  'Aftertaste',\r\n  'Acidity',\r\n  'Body',\r\n  'Balance',\r\n  'Uniformity',\r\n  'Sweetness',\r\n  'Moisture'\r\n];\r\n\r\nconst RadarChart = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(null);\r\n  const [visibleCountries, setVisibleCountries] = useState({});\r\n  const [shouldAnimate, setShouldAnimate] = useState(false);\r\n  const svgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    d3.csv(\"/datasets/rankingTable_radarChart_dataset.csv\").then(rows => {\r\n      const parsed = rows.map(d => ({\r\n        country: (d[\"\"] || d[\"Country\"] || d[Object.keys(d)[0]])?.trim(),\r\n        year: +d[Object.keys(d)[1]],\r\n        Aroma: +d[\"Aroma\"],\r\n        Flavor: +d[\"Flavor\"],\r\n        Aftertaste: +d[\"Aftertaste\"],\r\n        Acidity: +d[\"Acidity\"],\r\n        Body: +d[\"Body\"],\r\n        Balance: +d[\"Balance\"],\r\n        Uniformity: +d[\"Uniformity\"],\r\n        Sweetness: +d[\"Sweetness\"],\r\n        Moisture: +d[\"Moisture\"],\r\n        Total: +d[\"Total\"]\r\n      }));\r\n      setData(parsed);\r\n      const years = [...new Set(parsed.map(d => d.year))].sort((a,b) => a - b);\r\n      if (years.length) setSelectedYear(years[0]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!data.length || selectedYear === null) return;\r\n    const countries = data.filter(d => d.year === selectedYear).map(d => d.country);\r\n    const initVis = {};\r\n    countries.forEach(c => { initVis[c] = true; });\r\n    setVisibleCountries(initVis);\r\n  }, [data, selectedYear]);\r\n\r\n  const years = useMemo(\r\n    () => [...new Set(data.map(d => d.year))].sort((a,b) => a - b),\r\n    [data]\r\n  );\r\n  const countriesForYear = useMemo(\r\n    () => data.filter(d => d.year === selectedYear),\r\n    [data, selectedYear]\r\n  );\r\n  const sortedCountries = useMemo(\r\n    () => [...countriesForYear].sort((a,b) => b.Total - a.Total),\r\n    [countriesForYear]\r\n  );\r\n  const colorScale = useMemo(\r\n    () =>\r\n      d3\r\n        .scaleOrdinal()\r\n        .domain(sortedCountries.map(d => d.country))\r\n        .range(d3.schemeCategory10),\r\n    [sortedCountries]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!data.length || selectedYear === null) return;\r\n    const filtered = data.filter(d => d.year === selectedYear && visibleCountries[d.country]);\r\n\r\n    const width = 500;\r\n    const height = 500;\r\n    const margin = 50;\r\n    const radius = Math.min(width, height) / 2 - margin;\r\n    const levels = 5;\r\n    const angleSlice = (Math.PI * 2) / categories.length;\r\n\r\n    const svgEl = d3.select(svgRef.current);\r\n    svgEl.selectAll('*').remove();\r\n\r\n    const svg = svgEl\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', `translate(${width / 2},${height / 2})`);\r\n\r\n    const rScale = d3.scaleLinear().range([0, radius]).domain([0, 10]);\r\n    for (let i = 1; i <= levels; i++) {\r\n      svg\r\n        .append('circle')\r\n        .attr('r', (radius / levels) * i)\r\n        .style('fill', 'none')\r\n        .style('stroke', '#CDCDCD')\r\n        .style('stroke-dasharray', '2,2');\r\n    }\r\n\r\n    categories.forEach((cat, i) => {\r\n      const angle = angleSlice * i - Math.PI / 2;\r\n      const x = rScale(10) * Math.cos(angle);\r\n      const y = rScale(10) * Math.sin(angle);\r\n\r\n      svg\r\n        .append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', 0)\r\n        .attr('x2', x)\r\n        .attr('y2', y)\r\n        .style('stroke', '#CDCDCD')\r\n        .style('stroke-width', '1px');\r\n\r\n      svg\r\n        .append('text')\r\n        .attr('x', x * 1.1)\r\n        .attr('y', y * 1.1)\r\n        .attr('dy', '0.35em')\r\n        .style('font-size', '10px')\r\n        .style('text-anchor', 'middle')\r\n        .text(cat);\r\n    });\r\n\r\n    const radarLine = d3\r\n      .line()\r\n      .x(d => d[0])\r\n      .y(d => d[1])\r\n      .curve(d3.curveLinearClosed);\r\n\r\n    d3.groups(filtered, d => d.country).forEach(([country, records]) => {\r\n      const rec = records[0];\r\n      const coords = categories.map((cat, i) => {\r\n        let v = rec[cat];\r\n        if (cat === \"Moisture\") {\r\n          v = v <= 1 ? v * 80 : v / 80;\r\n          v = Math.min(v, 80);\r\n        }\r\n        const angle = angleSlice * i - Math.PI / 2;\r\n        return [rScale(v) * Math.cos(angle), rScale(v) * Math.sin(angle)];\r\n      });\r\n      const startCoords = coords.map(() => [0, 0]);\r\n\r\n      const path = svg\r\n        .append('path')\r\n        .datum(coords)\r\n        .style('fill', 'none')\r\n        .style('stroke', colorScale(country))\r\n        .style('stroke-width', '2px');\r\n\r\n      if (shouldAnimate) {\r\n        path\r\n          .attr('d', radarLine(startCoords))\r\n          .transition()\r\n          .duration(1000)\r\n          .attrTween('d', () => {\r\n            const interp = d3.interpolate(startCoords, coords);\r\n            return t => radarLine(interp(t));\r\n          });\r\n      } else {\r\n        path.attr('d', radarLine(coords));\r\n      }\r\n\r\n      const circles = svg\r\n        .selectAll(`.radar-circle-${country}`)\r\n        .data(coords)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('r', 3)\r\n        .style('fill', colorScale(country));\r\n\r\n      if (shouldAnimate) {\r\n        circles\r\n          .attr('cx', 0)\r\n          .attr('cy', 0)\r\n          .transition()\r\n          .duration(1000)\r\n          .attr('cx', d => d[0])\r\n          .attr('cy', d => d[1]);\r\n      } else {\r\n        circles\r\n          .attr('cx', d => d[0])\r\n          .attr('cy', d => d[1]);\r\n      }\r\n    });\r\n\r\n    if (shouldAnimate) setShouldAnimate(false);\r\n  }, [data, selectedYear, visibleCountries, shouldAnimate, colorScale]);\r\n\r\n  const toggle = country =>\r\n    setVisibleCountries(vis => ({ ...vis, [country]: !vis[country] }));\r\n\r\n  return (\r\n    <div className=\"radar-chart-container\">\r\n      <h2>Average Coffee Profile by Country and Year</h2>\r\n      <div className=\"chart-and-legend\">\r\n        <svg ref={svgRef}></svg>\r\n        <div className=\"legend-wrapper\">\r\n          <div className=\"legend-controls\">\r\n            <label htmlFor=\"year-select\">Year:</label>\r\n            <select\r\n              id=\"year-select\"\r\n              value={selectedYear || ''}\r\n              onChange={e => {\r\n                setShouldAnimate(true);\r\n                setSelectedYear(+e.target.value);\r\n              }}\r\n            >\r\n              {years.map(y => (\r\n                <option key={y} value={y}>\r\n                  {y}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <h3>Countries</h3>\r\n          <ul>\r\n            {sortedCountries.map(({ country, Total }) => (\r\n              <li\r\n                key={country}\r\n                onClick={() => toggle(country)}\r\n                className={!visibleCountries[country] ? 'disabled' : ''}\r\n              >\r\n                <span\r\n                  className=\"legend-color\"\r\n                  style={{ backgroundColor: colorScale(country) }}\r\n                ></span>\r\n                {country} ({Total})\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RadarChart;","import React, { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./LineGraph.css\";\r\n\r\nconst LineGraph = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState(\"All\");\r\n  const [yAxisOption, setYAxisOption] = useState(\"avgProduction\");\r\n\r\n  useEffect(() => {\r\n    d3.csv(\"/datasets/line_graph_totalproduction_totalscores_by_countryandyear.csv\").then((rows) => {\r\n      const parsed = rows.map((d) => ({\r\n        country: d[\"\"] || d[\"Country\"] || d[Object.keys(d)[0]].trim(),\r\n        year: +d[Object.keys(d)[1]],\r\n        avgProduction: +d[Object.keys(d)[2]],\r\n        avgScore: +d[Object.keys(d)[3]],\r\n      }));\r\n      setData(parsed);\r\n    });\r\n  }, []);\r\n\r\n  const countries = Array.from(new Set(data.map((d) => d.country)));\r\n\r\n  const filteredData =\r\n    selectedCountry === \"All\"\r\n      ? data\r\n      : data.filter((d) => d.country === selectedCountry);\r\n\r\n  const dataByYear = Array.from(\r\n    d3.group(filteredData, (d) => d.year),\r\n    ([year, values]) => ({\r\n      year: +year,\r\n      value: d3.mean(values, (d) => d[yAxisOption]),\r\n    })\r\n  ).sort((a, b) => a.year - b.year);\r\n\r\n  const width = 600;\r\n  const height = 300;\r\n  const margin = { top: 20, right: 50, bottom: 40, left: 50 };\r\n\r\n  const xScale = d3\r\n    .scaleLinear()\r\n    .domain(d3.extent(dataByYear, (d) => d.year))\r\n    .range([margin.left, width - margin.right]);\r\n\r\n  const yScale = d3\r\n    .scaleLinear()\r\n    .domain([\r\n      d3.min(dataByYear, (d) => d.value) * 0.95,\r\n      d3.max(dataByYear, (d) => d.value) * 1.05,\r\n    ])\r\n    .range([height - margin.bottom, margin.top]);\r\n\r\n  return (\r\n    <div className=\"line-graph-container\">\r\n      <h2>Average Score/Production Trends By Country</h2>\r\n      <div className=\"controls\">\r\n        \r\n        <label>\r\n          Country:\r\n          <select value={selectedCountry} onChange={(e) => setSelectedCountry(e.target.value)}>\r\n            <option value=\"All\">All</option>\r\n            {countries.map((country) => (\r\n              <option key={country} value={country}>{country}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n\r\n        <label>\r\n          Y-axis:\r\n          <select value={yAxisOption} onChange={(e) => setYAxisOption(e.target.value)}>\r\n            <option value=\"avgProduction\">Average Production</option>\r\n            <option value=\"avgScore\">Average Score</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      <svg viewBox={`0 0 ${width} ${height}`}\r\n  preserveAspectRatio=\"xMinYMin meet\"\r\n  style={{ width: '100%', height: 'auto' }}>\r\n        {/* X Axis */}\r\n        {xScale.ticks().map((tick) => (\r\n          <text\r\n            key={tick}\r\n            x={xScale(tick)}\r\n            y={height - 5}\r\n            fontSize=\"10\"\r\n            textAnchor=\"middle\"\r\n          >\r\n            {tick}\r\n          </text>\r\n        ))}\r\n\r\n        {/* Y Axis */}\r\n        {yScale.ticks(5).map((tick) => (\r\n          <text\r\n            key={tick}\r\n            x={margin.left - 10}\r\n            y={yScale(tick)}\r\n            fontSize=\"10\"\r\n            textAnchor=\"end\"\r\n            alignmentBaseline=\"middle\"\r\n            \r\n          >\r\n            {tick.toFixed(1)}\r\n          </text>\r\n        ))}\r\n\r\n        {/* X-axis line */}\r\n        <line\r\n          x1={xScale(d3.min(dataByYear, d => d.year))}\r\n          x2={xScale(d3.max(dataByYear, d => d.year))}\r\n          y1={yScale.range()[0]}\r\n          y2={yScale.range()[0]}\r\n          stroke=\"#4e342e\"\r\n          strokeWidth=\"1\"\r\n        />\r\n\r\n        \r\n\r\n        {/* X-axis label */}\r\n        <text\r\n          x={width / 2}\r\n          y={height + 20}\r\n          fontSize=\"12\"\r\n          fill=\"#4e342e\"\r\n          textAnchor=\"middle\"\r\n          dy=\"-4\"\r\n        >\r\n          Year\r\n        </text>\r\n\r\n        {/* Y-axis label */}\r\n        <text\r\n          transform={`rotate(-90)`}\r\n          x={-height / 2}\r\n          y=\"5\"\r\n          fontSize=\"12\"\r\n          fill=\"#4e342e\"\r\n          textAnchor=\"middle\"\r\n        >\r\n          {yAxisOption === \"avgProduction\" ? \"Average Production\" : \"Average Score\"}\r\n        </text>\r\n\r\n\r\n        {/* Line Path */}\r\n        <path\r\n          fill=\"none\"\r\n          stroke=\"#4e342e\"\r\n          strokeWidth=\"2\"\r\n          d={d3\r\n            .line()\r\n            .x((d) => xScale(d.year))\r\n            .y((d) => yScale(d.value))\r\n            .curve(d3.curveMonotoneX)(dataByYear)}\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineGraph;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./StackedBarChart.css\";\r\n\r\nconst categories = ['Aroma', 'Flavor', 'Aftertaste', 'Acidity', 'Body', 'Balance', 'Uniformity', 'Sweetness', 'Moisture'];\r\n\r\nconst StackedBarChart = () => {\r\n  const [data, setData] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(null);\r\n\r\n  useEffect(() => {\r\n    d3.csv(\"/datasets/preprocessed_stacked_data_with_year.csv\").then(rows => {\r\n      const parsed = rows.map(d => ({\r\n        year: +d.Year,\r\n        country: d.Country,\r\n        ...categories.reduce((acc, cat) => {\r\n          acc[cat] = +d[cat];\r\n          return acc;\r\n        }, {})\r\n      }));\r\n      setData(parsed);\r\n      const years = [...new Set(parsed.map(d => d.year))].sort();\r\n      setSelectedYear(years[0]);\r\n    });\r\n  }, []);\r\n\r\n  const filteredDataFull = data.filter(d => d.year === selectedYear);\r\n  const top5Data = filteredDataFull\r\n    .map(d => ({\r\n      ...d,\r\n      totalScore: categories.reduce((sum, cat) => sum + d[cat], 0)\r\n    }))\r\n    .sort((a, b) => b.totalScore - a.totalScore)\r\n    .slice(0, 5);\r\n\r\n  const barWidth = 100;\r\n  const barGap = 20;\r\n  const totalBarSpace = barWidth + barGap;\r\n  const width = 5 * totalBarSpace + 60 + 20;\r\n  const height = 400;\r\n  const margin = { top: 20, right: 20, bottom: 50, left: 60 };\r\n\r\n  const yScale = d3.scaleLinear()\r\n    .domain([0, d3.max(top5Data, d => d.totalScore)])\r\n    .nice()\r\n    .range([height - margin.bottom, margin.top]);\r\n\r\n  const color = d3.scaleOrdinal(d3.schemeCategory10).domain(categories);\r\n\r\n  const stackGenerator = d3.stack().keys(categories);\r\n  const layers = stackGenerator(top5Data);\r\n\r\n  const years = [...new Set(data.map(d => d.year))].sort();\r\n\r\n  return (\r\n    <div className=\"stacked-bar-chart-container\">\r\n      <h2>Top 5 Countries' Score Composition</h2>\r\n      \r\n      <div className=\"controls\">\r\n        <label>\r\n          Year:\r\n          <select value={selectedYear || \"\"} onChange={(e) => setSelectedYear(+e.target.value)}>\r\n            {years.map(year => <option key={year} value={year}>{year}</option>)}\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"stacked-bar-chart-scroll-wrapper\">\r\n        <svg width={width} height={height}>\r\n          {layers.map((layer, i) =>\r\n            layer.map(([y0, y1], j) => (\r\n              <rect\r\n                key={`${i}-${j}`}\r\n                x={margin.left + j * totalBarSpace}\r\n                y={yScale(y1)}\r\n                height={yScale(y0) - yScale(y1)}\r\n                width={barWidth}\r\n                fill={color(layer.key)}\r\n              />\r\n            ))\r\n          )}\r\n          {top5Data.map((d, i) => (\r\n            <text\r\n              key={i}\r\n              x={margin.left + i * totalBarSpace + barWidth / 2}\r\n              y={height - 5}\r\n              textAnchor=\"middle\"\r\n              fontSize=\"10\"\r\n            >\r\n              {d.country}\r\n            </text>\r\n          ))}\r\n          {yScale.ticks(5).map((tick, i) => (\r\n            <text\r\n              key={i}\r\n              x={margin.left - 5}\r\n              y={yScale(tick)}\r\n              textAnchor=\"end\"\r\n              alignmentBaseline=\"middle\"\r\n              fontSize=\"10\"\r\n            >\r\n              {tick.toFixed(1)}\r\n            </text>\r\n          ))}\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"legend\">\r\n        {categories.map(cat => (\r\n          <div key={cat} className=\"legend-item\">\r\n            <span className=\"legend-color\" style={{ backgroundColor: color(cat) }}></span>\r\n            {cat}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StackedBarChart;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport RankingTable from './components/RankingTable/RankingTable';\r\nimport RadarChart from './components/RadarChart/RadarChart';\r\nimport LineGraph from './components/LineGraph/LineGraph';\r\nimport StackedBarChart from './components/StackedBarChart/StackedBarChart';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"site-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"brand\">\r\n            <img src=\"/image/coffee-bean.png\" alt=\"Coffee Bean\" className=\"bean-icon\" />\r\n            <h1 className=\"site-title\">beanRating</h1>\r\n          </div>\r\n          <nav className=\"header-links\">\r\n            <a href=\"https://github.com/cynic10/CS_571_beanRating/blob/main/CS_571_FinalProcess%20Book.pdf\" target=\"_blank\" rel=\"noreferrer\">Process Book</a>\r\n            <a href=\"https://github.com/cynic10/CS_571_beanRating\" target=\"_blank\" rel=\"noreferrer\">GitHub</a>\r\n            <a href=\"https://www.youtube.com/watch?v=uo2VmsI0Cgw\" target=\"_blank\" rel=\"noreferrer\">Screencast</a>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"site-description\">\r\n        <p>\r\n          Visualization of coffee bean ratings and productions across countries and regions. Data were gathered{' '}\r\n          <a href=\"https://www.kaggle.com/datasets/mexwell/coffee-beans-rating\" target=\"_blank\" rel=\"noreferrer\">here</a>.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"ranking-radar-section\">\r\n        <div className=\"ranking-container\">\r\n          <RankingTable />\r\n          <p className=\"viz-description\">\r\n            A sortable table listing coffee bean ratings and production totals by country and year.\r\n          </p>\r\n        </div>\r\n        <div className=\"radar-container\">\r\n          <RadarChart />\r\n          <p className=\"viz-description\">\r\n            A radar chart comparing sensory attributes of coffee beans across countries for the selected year.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line-bar-section\">\r\n        <div className=\"bar-container\">\r\n          <StackedBarChart />\r\n          <p className=\"viz-description\">\r\n            A stacked bar chart showing scoring composition of top 5 scoring countries over the years.\r\n          </p>\r\n        </div>\r\n        <div className=\"line-container\">\r\n          <LineGraph />\r\n          <div style={{ marginTop: '40px' }}>\r\n          <p className=\"viz-description\">\r\n            A line graph illustrating trends in average coffee bean ratings across years.\r\n          </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <footer className=\"site-footer\">\r\n        <p>© The beanRating Team | Riya Deshpande, Phuong Nguyen, Kevin Dao</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}